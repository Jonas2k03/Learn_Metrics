USE lm_bd;

-- Eliminar tablas si existen
DROP TABLE IF EXISTS ASIG_COMP_DOCENTE;
DROP TABLE IF EXISTS RESULTAAP_RUBRICA;
DROP TABLE IF EXISTS TBL_ASIGNATURA;
DROP TABLE IF EXISTS TBL_DOCENTE;
DROP TABLE IF EXISTS TBL_NIVEL;
DROP TABLE IF EXISTS TBL_CRITERIO;
DROP TABLE IF EXISTS TBL_RA;
DROP TABLE IF EXISTS TBL_COMPETENCIA;
DROP TABLE IF EXISTS TBL_RUBRICA;

-- Tabla: ASIG_COMP_DOCENTE
CREATE TABLE ASIG_COMP_DOCENTE (
   ASIG_ID INT NOT NULL,
   DOC_ID INT NOT NULL,
   COMP_ID INT NOT NULL,
   PERIODO VARCHAR(20),
   PRIMARY KEY (ASIG_ID, DOC_ID, COMP_ID)
);

-- Tabla: RESULTAAP_RUBRICA
CREATE TABLE RESULTAAP_RUBRICA (
   RAP_ID INT NOT NULL,
   IDRUBRICA CHAR(10) NOT NULL,
   PRIMARY KEY (RAP_ID, IDRUBRICA)
);

-- Tabla: TBL_ASIGNATURA
CREATE TABLE TBL_ASIGNATURA (
   ASIG_ID INT NOT NULL,
   ASIG_NOMBRE VARCHAR(100),
   ASIG_CREDITOS INT,
   ASIG_OBJETIVOS VARCHAR(500),
   ASIG_SEMESTRE INT,
   PRIMARY KEY (ASIG_ID)
);

-- Tabla: TBL_COMPETENCIA
CREATE TABLE TBL_COMPETENCIA (
   COMP_ID INT NOT NULL,
   TBL_COMP_ID INT,
   COMP_DESCRIPCION VARCHAR(250),
   COMP_TIPO VARCHAR(50),
   COMP_NIVEL VARCHAR(50),
   PRIMARY KEY (COMP_ID)
);

-- Tabla: TBL_CRITERIO
CREATE TABLE TBL_CRITERIO (
   IDCRITERIO INT NOT NULL,
   IDRUBRICA CHAR(10),
   CRI_DESCRIPCION VARCHAR(50),
   PRIMARY KEY (IDCRITERIO)
);

-- Tabla: TBL_DOCENTE
CREATE TABLE TBL_DOCENTE (
   DOC_ID INT NOT NULL,
   DOC_TIPOIDENTIFICACION VARCHAR(50),
   DOC_TIPODOCENTE VARCHAR(50),
   DOC_NOMBRES VARCHAR(100),
   DOC_APELLIDOS VARCHAR(100),
   DOC_IDENTIFICACION VARCHAR(100),
   DOC_TITULO VARCHAR(100),
   PRIMARY KEY (DOC_ID)
);

-- Tabla: TBL_NIVEL
CREATE TABLE TBL_NIVEL (
   IDNIVEL INT NOT NULL AUTO_INCREMENT,
   IDCRITERIO INT,
   NIVELDESCRIPCION VARCHAR(50),
   NIVELRANGONOTA VARCHAR(50),
   PRIMARY KEY (IDNIVEL)
);

-- Tabla: TBL_RA
CREATE TABLE TBL_RA (
   RAP_ID INT NOT NULL,
   COMP_ID INT NOT NULL,
   RAP_DESCRIPCION VARCHAR(250),
   PRIMARY KEY (RAP_ID)
);

-- Tabla: TBL_RUBRICA
CREATE TABLE TBL_RUBRICA (
   IDRUBRICA CHAR(10) NOT NULL,
   RUB_NOMBRE CHAR(10),
   RUB_NOTA CHAR(10),
   PRIMARY KEY (IDRUBRICA)
);

-- Relaciones entre tablas
ALTER TABLE ASIG_COMP_DOCENTE ADD CONSTRAINT FK_ASIG_COMP_DOCENTE FOREIGN KEY (ASIG_ID)
      REFERENCES TBL_ASIGNATURA (ASIG_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE ASIG_COMP_DOCENTE ADD CONSTRAINT FK_ASIG_COMP_DOCENTE2 FOREIGN KEY (DOC_ID)
      REFERENCES TBL_DOCENTE (DOC_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE ASIG_COMP_DOCENTE ADD CONSTRAINT FK_ASIG_COMP_DOCENTE3 FOREIGN KEY (COMP_ID)
      REFERENCES TBL_COMPETENCIA (COMP_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE RESULTAAP_RUBRICA ADD CONSTRAINT FK_RESULTAAP_RUBRICA FOREIGN KEY (RAP_ID)
      REFERENCES TBL_RA (RAP_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE RESULTAAP_RUBRICA ADD CONSTRAINT FK_RESULTAAP_RUBRICA2 FOREIGN KEY (IDRUBRICA)
      REFERENCES TBL_RUBRICA (IDRUBRICA) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE TBL_COMPETENCIA ADD CONSTRAINT FK_FK_COMPETENCIAPROGRAMA FOREIGN KEY (TBL_COMP_ID)
      REFERENCES TBL_COMPETENCIA (COMP_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE TBL_CRITERIO ADD CONSTRAINT FK_RELATIONSHIP_3 FOREIGN KEY (IDRUBRICA)
      REFERENCES TBL_RUBRICA (IDRUBRICA) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE TBL_NIVEL ADD CONSTRAINT FK_RELATIONSHIP_4 FOREIGN KEY (IDCRITERIO)
      REFERENCES TBL_CRITERIO (IDCRITERIO) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE TBL_RA ADD CONSTRAINT FK_COMP_RA_PRO FOREIGN KEY (COMP_ID)
      REFERENCES TBL_COMPETENCIA (COMP_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;
